"0","# ----- Setup -----"
"0","library(readr); library(dplyr); library(tidyr); library(stringr); library(janitor)"
"0","library(plotly); library(DT); library(crosstalk); library(bslib); library(htmltools)"
"0",""
"0",""
"0","invisible(crosstalk::crosstalkLibs())"
"0",""
"0","# Pink-forward theme"
"0","theme <- bslib::bs_theme("
"0","  version = 5, bootswatch = ""cosmo"","
"0","  primary   = ""#E91E63"", body_color = ""#2f3342"","
"0","  base_font = bslib::font_google(""Inter"")"
"0",")"
"0","bslib::bs_theme_set(theme)"
"2","G2;H2;Warningh in bslib::bs_theme_set(theme) :
  'bslib::bs_theme_set' is deprecated.
Use 'bs_global_set' instead.
See help(""Deprecated"")g
"
"0","# ----- Data helpers -----"
"0","read_publications <- function(path) {"
"0","  df <- readr::read_csv(path, show_col_types = FALSE) |>"
"0","    janitor::clean_names()"
"0",""
"0","  if (""year"" %in% names(df)) suppressWarnings(df$year <- as.integer(df$year))"
"0",""
"0","  for (nm in intersect(c(""title"",""author"",""publicationtype"",""focusarea""), names(df))) {"
"0","    df[[nm]] <- as.character(df[[nm]]) |> stringr::str_squish()"
"0","  }"
"0",""
"0","  # map link column if named differently in CSV"
"0","  link_candidates <- intersect(names(df), c(""link"",""url"",""pdf"",""doi"",""weblink"",""link_url""))"
"0","  if (length(link_candidates) == 0) {"
"0","    df$link <- NA_character_"
"0","  } else if (!""link"" %in% names(df)) {"
"0","    df$link <- df[[link_candidates[1]]]"
"0","  }"
"0",""
"0","  if (""focusarea"" %in% names(df))"
"0","    df$focusarea <- ifelse(is.na(df$focusarea) | df$focusarea == """", ""Unspecified"", df$focusarea)"
"0","  if (""publicationtype"" %in% names(df))"
"0","    df$publicationtype <- ifelse(is.na(df$publicationtype) | df$publicationtype == """", ""Unspecified"", df$publicationtype)"
"0",""
"0","  df |> mutate(keyword_field = paste(title, focusarea, sep = "" | ""))"
"0","}"
"0",""
"0","# Read data and build a character key for Crosstalk"
"0","pubs <- read_publications(params$data_path) |>"
"0","  dplyr::ungroup() |>"
"0","  dplyr::mutate("
"0","    .id = as.character(dplyr::row_number()),  # << key MUST be character"
"0","    link_display = ifelse(is.na(link) | link=="""", """", paste0(""<a href='"", link, ""' target='_blank'>Open</a>""))"
"0","  ) |>"
"0","  as.data.frame()"
"0",""
"0","# ONE SharedData used by the plots (use the same group name everywhere)"
"0","sd <- crosstalk::SharedData$new(pubs, key = ~.id, group = ""pubs"")"
"0",""
