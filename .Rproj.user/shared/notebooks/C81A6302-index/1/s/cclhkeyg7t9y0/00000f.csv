"0","# Build a clean data frame in a fixed column order"
"0","tbl_df <- pubs |>"
"0","  dplyr::select(.id, year, publicationtype, focusarea, author, title, link_display, keyword_field)"
"0",""
"0","# The table needs its OWN SharedData, same group + key formula"
"0","sd_tbl <- crosstalk::SharedData$new(tbl_df, key = ~.id, group = ""pubs"")"
"0",""
"0","# Escape everything except the link column so links render"
"0","escape_cols <- setdiff(seq_along(tbl_df), which(names(tbl_df) == ""link_display""))"
"0",""
"0","bslib::card("
"0","  bslib::card_header(""Publications Table""),"
"0","  bslib::card_body("
"0","    DT::datatable("
"0","      sd_tbl,"
"0","      escape    = escape_cols,"
"0","      rownames  = FALSE,"
"0","      filter    = ""top"","
"0","      extensions = ""Buttons"","
"0","      options = list("
"0","        paging = FALSE,               # show all filtered rows at once (crucial for live stats)"
"0","        scrollY = ""50vh"","
"0","        scrollCollapse = TRUE,"
"0","        autoWidth = TRUE,"
"0","        dom = ""Bfrtip"","
"0","        buttons = c(""copy"", ""csv"", ""excel"", ""print""),"
"0","        search  = list(search = """"),"
"0","        # Hide .id (first) and keyword_field (last) in UI (JS uses 0-based indices)"
"0","        columnDefs = list(list(visible = FALSE, targets = c(0, ncol(tbl_df) - 1)))"
"0","      ),"
"0","      colnames = c("""", ""Year"",""Type"",""Focus Area"",""Author"",""Title"",""Link"",""_kw_""),"
"0","      class = ""display nowrap compact"","
"0","      callback = DT::JS("""
"0","        var table = this.api();"
"0",""
"0","        function visibleRowData(){"
"0","          // With paging off + scroll, all filtered rows exist in the DOM (some off-screen)."
"0","          var nodes = table.rows({search:'applied'}).nodes().to$();"
"0","          var vis = nodes.filter(':visible'); // Crosstalk hides non-matching via display:none"
"0","          return vis.map(function(){ return table.row(this).data(); }).get();"
"0","        }"
"0",""
"0","        function uniqueNonEmpty(arr){"
"0","          var s = {};"
"0","          arr.forEach(function(x){"
"0","            if (x && x.toString().trim() !== '') s[x.toString().trim()] = 1;"
"0","          });"
"0","          return Object.keys(s).length;"
"0","        }"
"0",""
"0","        function updateStats(){"
"0","          var rows = visibleRowData();"
"0","          var total = rows.length;"
"0",""
"0","          // Columns (0-based): 0=.id, 1=Year, 2=Type, 3=Focus, 4=Author, 5=Title, 6=Link, 7=_kw_"
"0","          var yrs = rows.map(function(r){ var n=parseInt(r[1],10); return isNaN(n)?null:n; })"
"0","                        .filter(function(x){ return x!==null; });"
"0","          var span = (yrs.length>0) ? (Math.min.apply(null, yrs) + '–' + Math.max.apply(null, yrs)) : '—';"
"0",""
"0","          var authors = rows.map(function(r){ return r[4]; });"
"0","          var focuses = rows.map(function(r){ return r[3]; });"
"0",""
"0","          var el;"
"0","          el = document.getElementById('stat-total');   if (el) el.textContent = total.toString();"
"0","          el = document.getElementById('stat-span');    if (el) el.textContent = span;"
"0","          el = document.getElementById('stat-authors'); if (el) el.textContent = uniqueNonEmpty(authors).toString();"
"0","          el = document.getElementById('stat-focus');   if (el) el.textContent = uniqueNonEmpty(focuses).toString();"
"0","        }"
"0",""
"0","        // Update when the table redraws"
"0","        table.on('draw.dt search.dt order.dt', updateStats);"
"0",""
"0","        // Update when Crosstalk filters change"
"0","        if (window.crosstalk) {"
"0","          var fh = new crosstalk.FilterHandle('pubs');"
"0","          fh.on('change', function(){ setTimeout(updateStats, 0); });"
"0","          crosstalk.var('selection').on('change', function(){ setTimeout(updateStats, 0); });"
"0","        }"
"0",""
"0","        // Initial compute"
"0","        setTimeout(updateStats, 0);"
"0","      "")"
"0","    )"
"0","  )"
"0",")"
