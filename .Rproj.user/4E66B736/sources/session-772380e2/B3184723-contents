---
title: "Publications Dashboard"
format:
  dashboard:
  logo: scc-logo.png
    theme:[sandstone, theme.scss]
    toc: false
    page-layout: full
execute:
  echo: false
  warning: false
  message: false
params:
  data_path: "s palos - Sheet1.csv"
---

```{r}
#| label: setup
#| include: false
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(janitor)
library(plotly)
library(DT)
library(crosstalk)

read_publications <- function(path) {
  df <- readr::read_csv(path, show_col_types = FALSE) |>
    janitor::clean_names()

  if ("year" %in% names(df)) suppressWarnings(df$year <- as.integer(df$year))

  for (nm in intersect(c("title","author","publicationtype","focusarea"), names(df))) {
    df[[nm]] <- df[[nm]] |> as.character() |> stringr::str_squish()
  }

  if ("focusarea" %in% names(df)) {
    df$focusarea <- ifelse(is.na(df$focusarea) | df$focusarea == "", "Unspecified", df$focusarea)
  }
  if ("publicationtype" %in% names(df)) {
    df$publicationtype <- ifelse(is.na(df$publicationtype) | df$publicationtype == "", "Unspecified", df$publicationtype)
  }


  df <- df |> mutate(keyword_field = paste(title, focusarea, sep = " | "))
  df
}

pubs <- read_publications(params$data_path) |>
  dplyr::ungroup() |>
  dplyr::mutate(.id = as.character(dplyr::row_number())) |>
  as.data.frame()


sd <- crosstalk::SharedData$new(pubs, key = ".id", group = "pubs")


top_focus <- pubs |>
  count(focusarea, name = "n") |>
  arrange(desc(n)) |>
  slice_head(n = 5)

```

Filters

```{r}
crosstalk::filter_slider("year",   "Year",             sd, ~year)
crosstalk::filter_select("type",   "Publication type", sd, ~publicationtype, multiple = TRUE)
crosstalk::filter_select("focus",  "Focus area",       sd, ~focusarea,       multiple = TRUE)

htmltools::HTML(sprintf(
  '<div class="hint"><strong>Tip:</strong> Use the table’s global search (top right) for authors or keywords. Top topics: %s.</div>',
  paste(sprintf('<span class="chip">%s</span>', htmltools::htmlEscape(top_focus$focusarea)), collapse=" ")
))

```

Overview

```{r}
stats <- pubs |>
  summarise(
    `Total publications`      = n(),
    `Year span`               = paste0(min(year, na.rm = TRUE), "–", max(year, na.rm = TRUE)),
    `Unique author entries`   = dplyr::n_distinct(author),
    `Focus areas`             = dplyr::n_distinct(focusarea)
  )


stats_html <- sprintf('
<div class="kpis">
  <div class="kpi"><div class="kpi-val">%d</div><div class="kpi-label">Publications</div></div>
  <div class="kpi"><div class="kpi-val">%s</div><div class="kpi-label">Year span</div></div>
  <div class="kpi"><div class="kpi-val">%d</div><div class="kpi-label">Unique author entries</div></div>
  <div class="kpi"><div class="kpi-val">%d</div><div class="kpi-label">Focus areas</div></div>
</div>',
  stats$`Total publications`, stats$`Year span`, stats$`Unique author entries`, stats$`Focus areas`
)

htmltools::HTML(stats_html)


```

Trends Over Time

```{r}
plotly::plot_ly(sd, x = ~year, type = "histogram") |>
  plotly::layout(
    title = list(text = "Publications by Year", x = 0),
    xaxis = list(title = "Year"),
    yaxis = list(title = "Count"),
    bargap = 0.15
  )

```

By Type

```{r}
plotly::plot_ly(sd, x = ~publicationtype, type = "histogram") |>
  plotly::layout(
    title = list(text = "Publications by Type", x = 0),
    xaxis = list(title = ""),
    yaxis = list(title = "Count")
  )

```

## By Focus Area

```{r}
# Build sorted categories by frequency for a nicer bar look
fa_counts <- pubs |> count(focusarea, name = "n") |> arrange(desc(n)) |> slice_head(n = 15)
# Use categories ordered by fa_counts for consistent ordering
plotly::plot_ly(
  sd,
  y = ~factor(focusarea, levels = fa_counts$focusarea[order(fa_counts$n)]),
  type = "histogram",
  orientation = "h"
) |>
  plotly::layout(
    title = list(text = "Top Focus Areas", x = 0),
    xaxis = list(title = "Count"),
    yaxis = list(title = ""),
    margin = list(l = 140)
  )

```

## Browse & Search Articles

```{r}
# Build a tidy display table
tbl_df <- pubs |>
  mutate(
    year = ifelse(is.na(year), "", as.character(year)),
    link_display = ifelse(is.na(link) | link == "", "", paste0("<a class='btn-link' href='", link, "' target='_blank'>Open</a>"))
  ) |>
  select(.id, year, publicationtype, focusarea, author, title, link_display, keyword_field)

# Link table to same filter group via .id
sd_tbl <- crosstalk::SharedData$new(tbl_df, key = ".id", group = "pubs")

DT::datatable(
  sd_tbl,
  escape = FALSE,
  rownames = FALSE,
  filter = "top",                 # per-column filters under headers
  extensions = "Buttons",
  options = list(
    pageLength = 12,
    autoWidth  = TRUE,
    dom        = "Bfrtip",
    buttons    = c("copy", "csv", "excel", "print"),
    search     = list(search = "")  # global search box
  ),
  colnames = c("", "Year","Type","Focus Area","Author","Title","Link","_kw_"),
  class = "display nowrap compact"
)

```
